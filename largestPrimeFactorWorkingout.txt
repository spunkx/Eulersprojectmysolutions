Working out for l p f
//https://en.wikipedia.org/wiki/Prime_number
//Find factors
//1,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,51,
//number mod big number equals 0, is a factor, else is not?
//recursive call for a number that is not prime to check factors?
//sieve of Eratosthenes, I was on the right track
//the pattern is that there are only certain ones digits that make up prime numbers
//use a binary operation to check "ones" digit..
//still a lot of divisons

//check if even or odd, if even divide by two
//check if multiple of three,blah and blah if is odd
//check odd divsors if not a multiple of three or then sums of its digits is not a multiple of three? 
//finish when number squared is greater than the prime
//interesting idea https://www.youtube.com/watch?v=ZMkIiFs35HQ

//run into recursion depth problems perhaps

